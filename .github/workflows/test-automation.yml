name: AQX Trading Platform Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - smoke
        - critical
        - trading
        - regression

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          chromium-chromedriver \
          xvfb
        
        # Set Chrome path
        export CHROME_BIN=/usr/bin/chromium-browser
        export CHROMEDRIVER_PATH=/usr/bin/chromedriver
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create test directories
      run: |
        mkdir -p screenshots reports logs test_data
    
    - name: Run smoke tests
      if: github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == ''
      run: |
        xvfb-run -a --server-args="-screen 0 1920x1080x24" \
        python -m pytest tests/ -m smoke -v \
        --html=reports/smoke_test_report.html \
        --self-contained-html
    
    - name: Run critical tests
      if: github.event.inputs.test_suite == 'critical' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == ''
      run: |
        xvfb-run -a --server-args="-screen 0 1920x1080x24" \
        python -m pytest tests/ -m critical -v \
        --html=reports/critical_test_report.html \
        --self-contained-html
    
    - name: Run trading tests
      if: github.event.inputs.test_suite == 'trading' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == ''
      run: |
        xvfb-run -a --server-args="-screen 0 1920x1080x24" \
        python -m pytest tests/ -m trading -v \
        --html=reports/trading_test_report.html \
        --self-contained-html
    
    - name: Run all tests
      if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == ''
      run: |
        xvfb-run -a --server-args="-screen 0 1920x1080x24" \
        python -m pytest tests/ -v \
        --html=reports/full_test_report.html \
        --self-contained-html \
        --junit-xml=reports/junit.xml
    
    - name: Generate test dashboard
      if: always()
      run: |
        python scripts/generate_dashboard.py
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          reports/
          screenshots/
          logs/
        retention-days: 30
    
    - name: Upload test reports to GitHub Pages
      if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./reports
        destination_dir: test-reports
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && matrix.python-version == '3.11'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = './reports/test_summary.json';
          
          if (fs.existsSync(path)) {
            const summary = JSON.parse(fs.readFileSync(path, 'utf8'));
            const comment = `
            ## üß™ Test Results Summary
            
            | Metric | Value |
            |--------|-------|
            | Total Tests | ${summary.total_tests} |
            | Passed | ${summary.passed} ‚úÖ |
            | Failed | ${summary.failed} ‚ùå |
            | Pass Rate | ${((summary.passed / summary.total_tests) * 100).toFixed(1)}% |
            
            üìä [View detailed test report](https://your-username.github.io/selenium-auto/test-reports/full_test_report.html)
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "Tests failed! Check the logs and reports for details."
        # Add Slack/Teams notification here if needed